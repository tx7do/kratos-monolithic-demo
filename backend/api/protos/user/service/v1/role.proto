syntax = "proto3";

package user.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

import "pagination/v1/pagination.proto";

// 角色服务
service RoleService {
  // 查询角色列表
  rpc ListRole (pagination.PagingRequest) returns (ListRoleResponse) {}

  // 查询角色详情
  rpc GetRole (GetRoleRequest) returns (Role) {}

  // 创建角色
  rpc CreateRole (CreateRoleRequest) returns (google.protobuf.Empty) {}

  // 更新角色
  rpc UpdateRole (UpdateRoleRequest) returns (google.protobuf.Empty) {}

  // 删除角色
  rpc DeleteRole (DeleteRoleRequest) returns (google.protobuf.Empty) {}
}

// 角色
message Role {
  uint32 id = 1;
  optional string name = 2;
  optional uint32 parentId = 3;
  optional int32 orderNo = 4;
  optional string code = 5;
  optional string status = 6 [(gnostic.openapi.v3.property) = {
    description: "状态"
    default: { string: "ON" }
    enum: [{yaml: "ON"}, {yaml: "OFF"}]
  }];
  optional string remark = 7;

  optional google.protobuf.Timestamp create_time = 30 [json_name = "createTime"];
  optional google.protobuf.Timestamp update_time = 31 [json_name = "updateTime"];
  optional google.protobuf.Timestamp delete_time = 32 [json_name = "deleteTime"];
}

// 角色列表 - 答复
message ListRoleResponse {
  repeated Role items = 1;
  int32 total = 2;
}

// 角色数据 - 请求
message GetRoleRequest {
  uint32 id = 1;
}

// 创建角色 - 请求
message CreateRoleRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ];

  Role role = 2;
}

// 更新角色 - 请求
message UpdateRoleRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ];

  Role role = 2;

  google.protobuf.FieldMask update_mask = 3 [
    (gnostic.openapi.v3.property) = {
      description: "要更新的字段列表",
      example: {yaml : "id,realName,userName"}
    },
    json_name = "updateMask"
  ];

  optional bool allow_missing = 4 [
    (gnostic.openapi.v3.property) = {description: "如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。"},
    json_name = "allowMissing"
  ];
}

// 删除角色 - 请求
message DeleteRoleRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ];

  uint32 id = 2;
}
