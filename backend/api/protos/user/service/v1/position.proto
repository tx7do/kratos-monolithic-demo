syntax = "proto3";

package user.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

import "pagination/v1/pagination.proto";

// 职位服务
service PositionService {
  // 查询职位列表
  rpc ListPosition (pagination.PagingRequest) returns (ListPositionResponse) {}

  // 查询职位详情
  rpc GetPosition (GetPositionRequest) returns (Position) {}

  // 创建职位
  rpc CreatePosition (CreatePositionRequest) returns (google.protobuf.Empty) {}

  // 更新职位
  rpc UpdatePosition (UpdatePositionRequest) returns (google.protobuf.Empty) {}

  // 删除职位
  rpc DeletePosition (DeletePositionRequest) returns (google.protobuf.Empty) {}
}

// 职位
message Position {
  optional uint32 id = 1 [
    json_name = "id",
    (gnostic.openapi.v3.property) = {description: "职位ID"}
  ];  // 职位ID

  optional string name = 2 [json_name = "name", (gnostic.openapi.v3.property) = {description: "职位名称"}];  // 职位名称

  optional int32 order_no = 3 [json_name = "orderNo", (gnostic.openapi.v3.property) = {description: "排序号"}];  // 排序号

  optional string code = 4 [json_name = "code", (gnostic.openapi.v3.property) = {description: "职位值"}];  // 职位值

  optional string status = 5 [(gnostic.openapi.v3.property) = {
    description: "状态"
    default: { string: "ON" }
    enum: [{yaml: "ON"}, {yaml: "OFF"}]
  }]; // 状态

  optional string remark = 6 [json_name = "remark", (gnostic.openapi.v3.property) = {description: "备注"}];  // 备注

  optional uint32 parent_id = 100 [json_name = "parentId", (gnostic.openapi.v3.property) = {description: "父节点ID"}];  // 父节点ID
  repeated Position children = 101 [json_name = "children", (gnostic.openapi.v3.property) = {description: "子节点树"}];  // 子节点树

  optional google.protobuf.Timestamp create_time = 200 [json_name = "createTime", (gnostic.openapi.v3.property) = {description: "创建时间"}]; // 创建时间
  optional google.protobuf.Timestamp update_time = 201 [json_name = "updateTime", (gnostic.openapi.v3.property) = {description: "更新时间"}]; // 更新时间
  optional google.protobuf.Timestamp delete_time = 202 [json_name = "deleteTime", (gnostic.openapi.v3.property) = {description: "删除时间"}]; // 删除时间
}

// 获取职位列表 - 答复
message ListPositionResponse {
  repeated Position items = 1;
  int32 total = 2;
}

// 获取职位数据 - 请求
message GetPositionRequest {
  uint32 id = 1;
}

// 创建职位 - 请求
message CreatePositionRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID

  Position position = 2;
}

// 更新职位 - 请求
message UpdatePositionRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID

  Position position = 2;

  google.protobuf.FieldMask update_mask = 3 [
    (gnostic.openapi.v3.property) = {
      description: "要更新的字段列表",
      example: {yaml : "id,realName,userName"}
    },
    json_name = "updateMask"
  ]; // 要更新的字段列表

  optional bool allow_missing = 4 [
    (gnostic.openapi.v3.property) = {description: "如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。"},
    json_name = "allowMissing"
  ]; // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
}

// 删除职位 - 请求
message DeletePositionRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID

  uint32 id = 2;
}
